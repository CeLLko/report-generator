/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.muni.fi.sbapr.gui.DataSourcePanels;

import cz.muni.fi.sbapr.utils.IterableNodeList;
import cz.muni.fi.sbapr.utils.RGHelper;
import java.awt.Dialog;
import javax.swing.JOptionPane;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

/**
 *
 * @author Adam
 */
public class PostgreSQLDataSourcePanel extends DataSourcePanel {

    private final RSyntaxTextArea SQLAreaSyntax;

    /**
     * Creates new form IMGDataSourcePanel
     */
    public PostgreSQLDataSourcePanel(Dialog parent) {
        super(parent);
        SQLAreaSyntax = new RSyntaxTextArea(5, 60);
        SQLAreaSyntax.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_SQL);
        SQLAreaSyntax.setCodeFoldingEnabled(true);
        SQLAreaSyntax.setLineWrap(true);
        SQLAreaSyntax.setWrapStyleWord(true);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hostField = new javax.swing.JTextField();
        credentialsRadio = new javax.swing.JRadioButton();
        userField = new javax.swing.JTextField();
        portField = new javax.swing.JTextField();
        passField = new javax.swing.JPasswordField();
        dbField = new javax.swing.JTextField();
        jScrollPane2 = new RTextScrollPane(SQLAreaSyntax);

        setMinimumSize(new java.awt.Dimension(300, 150));
        setPreferredSize(new java.awt.Dimension(300, 300));

        hostField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hostField.setText("HOST");
        hostField.setToolTipText("Host name or IP");
        hostField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostFieldActionPerformed(evt);
            }
        });

        credentialsRadio.setText("Remember");
        credentialsRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credentialsRadioActionPerformed(evt);
            }
        });

        userField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userField.setText("USER");
        userField.setToolTipText("");
        userField.setEnabled(false);

        portField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        portField.setText("5432");
        portField.setToolTipText("Port");

        passField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passField.setText("pass");
        passField.setEnabled(false);

        dbField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dbField.setText("DB");
        dbField.setToolTipText("Database name");
        dbField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbFieldActionPerformed(evt);
            }
        });

        ((RTextScrollPane)jScrollPane2).setLineNumbersEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hostField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dbField, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(credentialsRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dbField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(credentialsRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void hostFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostFieldActionPerformed

    private void dbFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dbFieldActionPerformed

    private void credentialsRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credentialsRadioActionPerformed
        userField.setEnabled(credentialsRadio.isSelected());
        passField.setEnabled(credentialsRadio.isSelected());
    }//GEN-LAST:event_credentialsRadioActionPerformed

    @Override
    public boolean updateElement(Element element) {
        new IterableNodeList(element.getChildNodes()).forEach(child -> element.removeChild(child));

        Document doc = RGHelper.INSTANCE.getDoc();
        Element hostElement = doc.createElement("host");
        hostElement.appendChild(doc.createTextNode(hostField.getText()));
        Element dbElement = doc.createElement("db");
        dbElement.appendChild(doc.createTextNode(dbField.getText()));
        Element sqlElement = doc.createElement("statement");
        sqlElement.appendChild(doc.createTextNode(SQLAreaSyntax.getText()));

        try {
            int port = Integer.parseInt(portField.getText());
            if (port <= 0 || port > 65535) {
                throw new NumberFormatException("Port must be within range (1-65535)");
            }
            Element portElement = doc.createElement("port");
            portElement.appendChild(doc.createTextNode("" + port));
            element.appendChild(portElement);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this.getParent(), ex.getMessage(), "Port error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (credentialsRadio.isSelected()) {
            Element userElement = doc.createElement("user");
            userElement.appendChild(doc.createTextNode(userField.getText()));
            Element passElement = doc.createElement("pass");
            passElement.appendChild(doc.createTextNode(passField.getText()));
            element.appendChild(userElement);
            element.appendChild(passElement);
        }
        element.appendChild(hostElement);
        element.appendChild(dbElement);
        element.appendChild(sqlElement);
        IterableNodeList nodes = new IterableNodeList(element.getChildNodes());
        return true;

    }

    @Override
    public void loadElement(Element element) {
        hostField.setText(getAttribute(element, "host") == null ? "Host" : getAttribute(element, "host"));
        portField.setText(getAttribute(element, "port") == null ? "5432" : getAttribute(element, "port"));
        dbField.setText(getAttribute(element, "db") == null ? "DB" : getAttribute(element, "db"));
        userField.setText(getAttribute(element, "user") == null ? "USER" : getAttribute(element, "user"));
        passField.setText("*****");
        SQLAreaSyntax.setText(getAttribute(element, "statement") == null ? "SELECT" : getAttribute(element, "statement"));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton credentialsRadio;
    private javax.swing.JTextField dbField;
    private javax.swing.JTextField hostField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPasswordField passField;
    private javax.swing.JTextField portField;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables
}
