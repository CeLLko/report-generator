package cz.muni.fi.sbapr.gui;

import cz.muni.fi.sbapr.Slide;
import cz.muni.fi.sbapr.utils.RGHelper;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipFile;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author adamg
 */
public class MainWindow extends javax.swing.JFrame {

    private int i = 0;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        PresentationGUI.INSTANCE.setSlideTable((SlidesTableModel)slidesTable.getModel());
        PresentationGUI.INSTANCE.setMainWindow(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        slidesTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        buttonAdd = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonDuplicate = new javax.swing.JButton();
        buttonMoveUp = new javax.swing.JButton();
        buttonMoveDown = new javax.swing.JButton();
        buttonEdit = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        FileMenuNew = new javax.swing.JMenuItem();
        FileMenuOpen = new javax.swing.JMenuItem();
        FileMenuSave = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(230, 200));

        jScrollPane1.setBorder(null);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(600, 400));

        slidesTable.setModel(new SlidesTableModel());
        slidesTable.setRowHeight(40);
        jScrollPane1.setViewportView(slidesTable);
        if (slidesTable.getColumnModel().getColumnCount() > 0) {
            slidesTable.getColumnModel().getColumn(0).setMinWidth(40);
            slidesTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            slidesTable.getColumnModel().getColumn(0).setMaxWidth(40);
            slidesTable.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 33));

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setRollover(true);
        jToolBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jToolBar1.setPreferredSize(new java.awt.Dimension(400, 33));

        buttonAdd.setBackground(new java.awt.Color(255, 255, 255));
        buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/new.png"))); // NOI18N
        buttonAdd.setFocusable(false);
        buttonAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonAddMouseReleased(evt);
            }
        });
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonAdd);

        buttonDelete.setBackground(new java.awt.Color(255, 255, 255));
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/delete.png"))); // NOI18N
        buttonDelete.setFocusable(false);
        buttonDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonDeleteMouseReleased(evt);
            }
        });
        jToolBar1.add(buttonDelete);

        buttonDuplicate.setBackground(new java.awt.Color(255, 255, 255));
        buttonDuplicate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/duplicate.png"))); // NOI18N
        buttonDuplicate.setFocusable(false);
        buttonDuplicate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonDuplicate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonDuplicate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonDuplicateMouseReleased(evt);
            }
        });
        jToolBar1.add(buttonDuplicate);

        buttonMoveUp.setBackground(new java.awt.Color(255, 255, 255));
        buttonMoveUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/up.png"))); // NOI18N
        buttonMoveUp.setFocusable(false);
        buttonMoveUp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonMoveUp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonMoveUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonMoveUpMouseReleased(evt);
            }
        });
        jToolBar1.add(buttonMoveUp);

        buttonMoveDown.setBackground(new java.awt.Color(255, 255, 255));
        buttonMoveDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/down.png"))); // NOI18N
        buttonMoveDown.setFocusable(false);
        buttonMoveDown.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonMoveDown.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonMoveDown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonMoveDownMouseReleased(evt);
            }
        });
        jToolBar1.add(buttonMoveDown);

        buttonEdit.setBackground(new java.awt.Color(255, 255, 255));
        buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/edit.png"))); // NOI18N
        buttonEdit.setFocusable(false);
        buttonEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttonEditMouseReleased(evt);
            }
        });
        jToolBar1.add(buttonEdit);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jMenu1.setText("File");

        FileMenuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        FileMenuNew.setText("New XML");
        FileMenuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuNewActionPerformed(evt);
            }
        });
        jMenu1.add(FileMenuNew);

        FileMenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        FileMenuOpen.setText("Open XML");
        FileMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuOpenActionPerformed(evt);
            }
        });
        jMenu1.add(FileMenuOpen);

        FileMenuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        FileMenuSave.setText("Save XML");
        FileMenuSave.setToolTipText("");
        FileMenuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuSaveActionPerformed(evt);
            }
        });
        jMenu1.add(FileMenuSave);
        jMenu1.add(jSeparator1);

        jMenuItem3.setText("Exit");
        jMenuItem3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem3MouseReleased(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Slides");

        jMenuItem4.setText("Generate .pptx");
        jMenu2.add(jMenuItem4);
        jMenu2.add(jSeparator2);

        jMenuItem5.setText("Preview selected slides");
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAddMouseReleased
        //((SlidesTableModel) slidesTable.getModel()).createSlide(new Node slideNode, ++i, "nagios.gdovin.eu/nagiosgraph");
    }//GEN-LAST:event_buttonAddMouseReleased

    private void buttonDeleteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonDeleteMouseReleased
        try {
            PresentationGUI.INSTANCE.deleteSlide(slidesTable.getSelectedRow());
        } catch (IllegalArgumentException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_buttonDeleteMouseReleased

    private void buttonDuplicateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonDuplicateMouseReleased
        try {
            PresentationGUI.INSTANCE.duplicateSlide(slidesTable.getSelectedRow());
        } catch (CloneNotSupportedException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonDuplicateMouseReleased

    private void buttonMoveUpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMoveUpMouseReleased
        try {
            PresentationGUI.INSTANCE.moveSlide(slidesTable.getSelectedRow(), slidesTable.getSelectedRow() - 1);
            slidesTable.setRowSelectionInterval(slidesTable.getSelectedRow() - 1, slidesTable.getSelectedRow() - 1);
        } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException ex) {
        }
    }//GEN-LAST:event_buttonMoveUpMouseReleased

    private void buttonMoveDownMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMoveDownMouseReleased
        try {
            PresentationGUI.INSTANCE.moveSlide(slidesTable.getSelectedRow(), slidesTable.getSelectedRow() + 1);
            slidesTable.setRowSelectionInterval(slidesTable.getSelectedRow() + 1, slidesTable.getSelectedRow() + 1);
        } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException ex) {
        }
    }//GEN-LAST:event_buttonMoveDownMouseReleased

    private void buttonEditMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEditMouseReleased
        Slide slide = PresentationGUI.INSTANCE.getSlides().get(slidesTable.getSelectedRow());
        //slide.getDialog().show();
    }//GEN-LAST:event_buttonEditMouseReleased

    private void jMenuItem3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem3MouseReleased
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3MouseReleased

    private void FileMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuOpenActionPerformed
        ZipFile zipFile = null;
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("Report Generator files", "rg"));
        if (fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            try {
                zipFile = new ZipFile(fc.getSelectedFile());
                PresentationGUI.INSTANCE.open(zipFile);
                RGHelper.INSTANCE.parse(zipFile);
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_FileMenuOpenActionPerformed

    private void FileMenuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FileMenuSaveActionPerformed

    private void FileMenuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuNewActionPerformed
        File pptxFile = null;
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("PowerPoint Template", "ppt", "pptx"));
        if (fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            pptxFile = fc.getSelectedFile();
            PresentationGUI.INSTANCE.createNew(pptxFile);
        }
    }//GEN-LAST:event_FileMenuNewActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        PresentationGUI.INSTANCE.createSlide();
    }//GEN-LAST:event_buttonAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem FileMenuNew;
    private javax.swing.JMenuItem FileMenuOpen;
    private javax.swing.JMenuItem FileMenuSave;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonDuplicate;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonMoveDown;
    private javax.swing.JButton buttonMoveUp;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable slidesTable;
    // End of variables declaration//GEN-END:variables
}
